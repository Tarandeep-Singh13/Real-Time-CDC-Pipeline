{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 17,
    "pipelineId" : "ta7d02c47f-816e-47d7-abe6-9e6624beb07b",
    "title" : "Tarandeep-4.3",
    "description" : "",
    "uuid" : "7fb7a40e-73e9-4be9-82bb-d4513c68ccc3",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-google-cloud-lib::com_streamsets_pipeline_stage_cloudstorage_destination_ToErrorGoogleCloudStorageDTarget::1"
    }, {
      "name" : "errorRecordPolicy",
      "value" : "STAGE_RECORD"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "INFO"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "preprocessScript",
      "value" : "/*\nThe following script define a method\nthat increments an integer by 1 \nand registers it as a UDF with \nthe SparkSession, which can be accessed\nusing the variable named \"spark\":\ndef inc(i: Integer): Integer = {\n  i + 1\n}\nspark.udf.register (\"inc\", inc _)\n\n*/"
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "LOCAL"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : null
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "clusterConfig.callbackUrl",
      "value" : null
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : null
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : null
    }, {
      "name" : "databricksConfig.username",
      "value" : ""
    }, {
      "name" : "databricksConfig.password",
      "value" : ""
    }, {
      "name" : "databricksConfig.token",
      "value" : ""
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : true
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : null
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : "https://localhost:30443/gateway/default/livy/v1/"
    }, {
      "name" : "livyConfig.username",
      "value" : ""
    }, {
      "name" : "livyConfig.password",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.useIAMRoles",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.accessKey",
      "value" : ""
    }, {
      "name" : "transformerEMRConfig.secretKey",
      "value" : ""
    }, {
      "name" : "transformerEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.emrVersion",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "transformerEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 30000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "KafkaConsumer_01",
      "library" : "streamsets-datacollector-apache-kafka_2_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource",
      "stageVersion" : "10",
      "configuration" : [ {
        "name" : "kafkaConfigBean.dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.useCustomDelimiter",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.customDelimiter",
        "value" : "\\r\\n"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.includeCustomDelimiterInTheText",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvAllowExtraColumns",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvExtraColumnPrefix",
        "value" : "_extra_"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.multiCharacterFieldDelimiter",
        "value" : "||"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.multiCharacterLineDelimiter",
        "value" : "${str:unescapeJava('\\\\n')}"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvEnableComments",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCommentMarker",
        "value" : "#"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvIgnoreEmptyLines",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.parseNull",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.nullConstant",
        "value" : "\\\\N"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.preserveRootElement",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.includeFieldXpathAttributes",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xPathNamespaceContext",
        "value" : [ ]
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.outputFieldAttributes",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.avroSchemaSource",
        "value" : "SOURCE"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.basicAuth",
        "value" : ""
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.subject",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.avroSkipUnionIndex",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.isDelimited",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.datagramMode",
        "value" : "SYSLOG"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.typesDbPath",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.convertTime",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.excludeInterval",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.authFilePath",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.netflowOutputValuesMode",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.maxTemplateCacheSize",
        "value" : -1
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.templateCacheTimeoutMs",
        "value" : -1
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.netflowOutputValuesModeDatagram",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.maxTemplateCacheSizeDatagram",
        "value" : -1
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.templateCacheTimeoutMsDatagram",
        "value" : -1
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.wholeFileMaxObjectLen",
        "value" : 8192
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.rateLimit",
        "value" : "-1"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.verifyChecksum",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.excelHeader",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.excelSkipCellsWithNoHeader",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.excelReadAllSheets",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.excelSheetNames",
        "value" : [ ]
      }, {
        "name" : "kafkaConfigBean.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "kafkaConfigBean.metadataBrokerList",
        "value" : "tarandeeps-broker"
      }, {
        "name" : "kafkaConfigBean.zookeeperConnect",
        "value" : "tarandeeps-zookeerper"
      }, {
        "name" : "kafkaConfigBean.consumerGroup",
        "value" : "streamsetsDataCollector"
      }, {
        "name" : "kafkaConfigBean.topic",
        "value" : "pg-member-enroll-records"
      }, {
        "name" : "kafkaConfigBean.produceSingleRecordPerMessage",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "kafkaConfigBean.maxWaitTime",
        "value" : 2000
      }, {
        "name" : "kafkaConfigBean.maxRatePerPartition",
        "value" : 1000
      }, {
        "name" : "kafkaConfigBean.keyDeserializer",
        "value" : "STRING"
      }, {
        "name" : "kafkaConfigBean.keyCaptureMode",
        "value" : "NONE"
      }, {
        "name" : "kafkaConfigBean.keyCaptureAttribute",
        "value" : "str:concat()"
      }, {
        "name" : "kafkaConfigBean.keyCaptureField",
        "value" : "/kafkaMessage"
      }, {
        "name" : "kafkaConfigBean.valueDeserializer",
        "value" : "DEFAULT"
      }, {
        "name" : "kafkaConfigBean.kafkaAutoOffsetReset",
        "value" : "EARLIEST"
      }, {
        "name" : "kafkaConfigBean.timestampToSearchOffsets",
        "value" : 0
      }, {
        "name" : "kafkaConfigBean.kafkaConsumerConfigs",
        "value" : [ ]
      }, {
        "name" : "kafkaConfigBean.timestampsEnabled",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "SOURCE",
        "rawSource" : {
          "configuration" : [ {
            "name" : "brokerHost",
            "value" : "localhost"
          }, {
            "name" : "brokerPort",
            "value" : 9092
          }, {
            "name" : "topic",
            "value" : "myTopic"
          }, {
            "name" : "partition",
            "value" : 0
          }, {
            "name" : "maxWaitTime",
            "value" : 1000
          } ]
        },
        "icon" : "kafka.png",
        "description" : "",
        "label" : "Kafka Consumer",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "KafkaConsumer_01OutputLane17211910494280" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/ingest_time",
          "expression" : "${time:extractStringFromDate(time:now(),\"dd MMM yyyy HH:mm:ss.SSS a\")}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "INGESTION Evaluator",
        "xPos" : 280
      },
      "inputLanes" : [ "KafkaConsumer_01OutputLane17211910494280" ],
      "outputLanes" : [ "ExpressionEvaluator_01OutputLane17211911090900" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "JSONGenerator_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_jsongenerator_JsonGeneratorDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldPathToSerialize",
        "value" : "/"
      }, {
        "name" : "outputFieldPath",
        "value" : "/"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "json.png",
        "description" : "",
        "label" : "JSON Generator",
        "xPos" : 500
      },
      "inputLanes" : [ "ExpressionEvaluator_01OutputLane17211911090900" ],
      "outputLanes" : [ "JSONGenerator_01OutputLane17216448005340" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "JSONParser_02",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_jsonparser_JsonParserDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldPathToParse",
        "value" : "/"
      }, {
        "name" : "removeCtrlChars",
        "value" : false
      }, {
        "name" : "parsedFieldPath",
        "value" : "/"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "json.png",
        "description" : "",
        "label" : "JSON Parser",
        "xPos" : 720
      },
      "inputLanes" : [ "JSONGenerator_01OutputLane17216448005340" ],
      "outputLanes" : [ "JSONParser_02OutputLane17213700627700" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_02",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/processed_time",
          "expression" : "${time:extractStringFromDate(time:now(),\"dd MMM yyyy HH:mm:ss.SSS a\")}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "AVRO Evaluator",
        "xPos" : 940
      },
      "inputLanes" : [ "JSONParser_02OutputLane17213700627700" ],
      "outputLanes" : [ "ExpressionEvaluator_02OutputLane17213692820260" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "SchemaGenerator_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_schemagen_SchemaGeneratorDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.schemaType",
        "value" : "AVRO"
      }, {
        "name" : "config.schemaName",
        "value" : "avroSchema"
      }, {
        "name" : "config.attributeName",
        "value" : "avroSchema"
      }, {
        "name" : "config.avroNamespace",
        "value" : null
      }, {
        "name" : "config.avroDoc",
        "value" : null
      }, {
        "name" : "config.avroNullableFields",
        "value" : true
      }, {
        "name" : "config.avroDefaultNullable",
        "value" : false
      }, {
        "name" : "config.avroDefaultTypes",
        "value" : [ ]
      }, {
        "name" : "config.avroExpandTypes",
        "value" : true
      }, {
        "name" : "config.precisionAttribute",
        "value" : "precision"
      }, {
        "name" : "config.scaleAttribute",
        "value" : "scale"
      }, {
        "name" : "config.defaultPrecision",
        "value" : -1
      }, {
        "name" : "config.defaultScale",
        "value" : -1
      }, {
        "name" : "config.enableCache",
        "value" : false
      }, {
        "name" : "config.cacheSize",
        "value" : 50
      }, {
        "name" : "config.cacheKeyExpression",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "schemagen.png",
        "description" : "",
        "label" : "AVRO Schema Generator",
        "xPos" : 1160
      },
      "inputLanes" : [ "ExpressionEvaluator_02OutputLane17213692820260" ],
      "outputLanes" : [ "SchemaGenerator_01OutputLane17217291726350" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "GoogleCloudStorage_01",
      "library" : "streamsets-datacollector-google-cloud-lib",
      "stageName" : "com_streamsets_pipeline_stage_cloudstorage_destination_GoogleCloudStorageDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "gcsTargetConfig.bucketTemplate",
        "value" : "tarandeeps-training-bucket1"
      }, {
        "name" : "gcsTargetConfig.commonPrefix",
        "value" : "Tarandeep/AVRODATA"
      }, {
        "name" : "gcsTargetConfig.partitionTemplate",
        "value" : "avrod"
      }, {
        "name" : "gcsTargetConfig.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "gcsTargetConfig.timeDriverTemplate",
        "value" : "${time:now()}"
      }, {
        "name" : "gcsTargetConfig.fileNamePrefix",
        "value" : "avrodata"
      }, {
        "name" : "gcsTargetConfig.fileNameSuffix",
        "value" : "avro"
      }, {
        "name" : "gcsTargetConfig.dataFormat",
        "value" : "AVRO"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : ""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvQuoteMode",
        "value" : "MINIMAL"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroSchemaSource",
        "value" : "HEADER"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroSchema",
        "value" : "{\"type\":\"record\",\"name\":\"avroSchema\",\"doc\":\"\",\"fields\":[{\"name\":\"stac\",\"type\":[\"null\",\"string\"]},{\"name\":\"_id\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"ingest_time\",\"type\":[\"null\",\"string\"]},{\"name\":\"processed_time\",\"type\":[\"null\",\"string\"]}]}"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.basicAuthUserInfo",
        "value" : ""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.subject",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.basicAuthUserInfoForRegistration",
        "value" : ""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.includeSchema",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.fileNameEL",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.wholeFileExistsAction",
        "value" : "TO_ERROR"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.credentials.projectId",
        "value" : "taran-434009"
      }, {
        "name" : "gcsTargetConfig.credentials.credentialsProvider",
        "value" : "JSON"
      }, {
        "name" : "gcsTargetConfig.credentials.path",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.credentials.credentialsFileContent",
        "value" : "${credential:get(\"azure\", \"all\", \"tr-gcp-new-json\")}"
      }, {
        "name" : "gcsTargetConfig.compress",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "cloud-storage-logo.png",
        "description" : "",
        "label" : "Google Cloud AVRO Storage",
        "xPos" : 1380
      },
      "inputLanes" : [ "SchemaGenerator_01OutputLane17217291726350" ],
      "outputLanes" : [ ],
      "eventLanes" : [ "GoogleCloudStorage_01_EventLane" ],
      "services" : [ ]
    }, {
      "instanceName" : "PipelineFinisherExecutor_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_executor_finishpipeline_PipelineFinisherDExecutor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.resetOffset",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 200,
        "stageType" : "EXECUTOR",
        "icon" : "finisher.png",
        "description" : "",
        "label" : "Pipeline Finisher Executor",
        "xPos" : 1600
      },
      "inputLanes" : [ "GoogleCloudStorage_01_EventLane" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "WritetoGoogleCloudStorage_ErrorStage",
      "library" : "streamsets-datacollector-google-cloud-lib",
      "stageName" : "com_streamsets_pipeline_stage_cloudstorage_destination_ToErrorGoogleCloudStorageDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "gcsTargetConfig.bucketTemplate",
        "value" : "Tarandeeps-training-bucket1"
      }, {
        "name" : "gcsTargetConfig.commonPrefix",
        "value" : "error"
      }, {
        "name" : "gcsTargetConfig.partitionTemplate",
        "value" : "${record:value('/')}"
      }, {
        "name" : "gcsTargetConfig.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "gcsTargetConfig.timeDriverTemplate",
        "value" : "${time:now()}"
      }, {
        "name" : "gcsTargetConfig.fileNamePrefix",
        "value" : "error"
      }, {
        "name" : "gcsTargetConfig.fileNameSuffix",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : " "
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.csvQuoteMode",
        "value" : "MINIMAL"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.basicAuthUserInfo",
        "value" : ""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.subject",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.basicAuthUserInfoForRegistration",
        "value" : ""
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.includeSchema",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.fileNameEL",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.wholeFileExistsAction",
        "value" : "TO_ERROR"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "gcsTargetConfig.dataGeneratorFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.credentials.projectId",
        "value" : "Tarandeep"
      }, {
        "name" : "gcsTargetConfig.credentials.credentialsProvider",
        "value" : "JSON"
      }, {
        "name" : "gcsTargetConfig.credentials.path",
        "value" : null
      }, {
        "name" : "gcsTargetConfig.credentials.credentialsFileContent",
        "value" : "${credential:get(\"azure\", \"all\", \"tr-gcp-new-json\")}"
      }, {
        "name" : "gcsTargetConfig.compress",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 200,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Error Records - Write to Google Cloud Storage",
        "xPos" : 1600
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "ta7d02c47f-816e-47d7-abe6-9e6624beb07b",
      "title" : "Tarandeep-4.3",
      "description" : "",
      "created" : 1723027550277,
      "lastModified" : 1730961993167,
      "creator" : "tarandeep",
      "lastModifier" : "tarandeep",
      "lastRev" : "0",
      "uuid" : "7fb7a40e-73e9-4be9-82bb-d4513c68ccc3",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      },
      "name" : "ta7d02c47f-816e-47d7-abe6-9e6624beb07b",
      "sdcVersion" : "3.15.0",
      "sdcId" : "4a7f52aa-848b-11ea-8f80-2d51c4777677"
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "statsAggregatorStageInstance",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "stageType" : "TARGET",
        "label" : "Stats Aggregator -Write Directly to Control Hub - statistics are not aggregated across Data Collectors"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "testOriginStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "rawData",
        "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
      }, {
        "name" : "stopAfterFirstBatch",
        "value" : false
      }, {
        "name" : "eventData",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "stageType" : "SOURCE",
        "label" : "Test Origin - Dev Raw Data Source"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
      "eventLanes" : [ ],
      "services" : [ {
        "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
        "serviceVersion" : 2,
        "configuration" : [ {
          "name" : "displayFormats",
          "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
        }, {
          "name" : "dataFormat",
          "value" : "JSON"
        }, {
          "name" : "dataFormatConfig.compression",
          "value" : "NONE"
        }, {
          "name" : "dataFormatConfig.filePatternInArchive",
          "value" : "*"
        }, {
          "name" : "dataFormatConfig.charset",
          "value" : "UTF-8"
        }, {
          "name" : "dataFormatConfig.removeCtrlChars",
          "value" : false
        }, {
          "name" : "dataFormatConfig.textMaxLineLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.useCustomDelimiter",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customDelimiter",
          "value" : "\\r\\n"
        }, {
          "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
          "value" : false
        }, {
          "name" : "dataFormatConfig.jsonContent",
          "value" : "MULTIPLE_OBJECTS"
        }, {
          "name" : "dataFormatConfig.jsonMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.csvFileFormat",
          "value" : "CSV"
        }, {
          "name" : "dataFormatConfig.csvHeader",
          "value" : "NO_HEADER"
        }, {
          "name" : "dataFormatConfig.csvAllowExtraColumns",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvExtraColumnPrefix",
          "value" : "_extra_"
        }, {
          "name" : "dataFormatConfig.csvMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.csvCustomDelimiter",
          "value" : "|"
        }, {
          "name" : "dataFormatConfig.multiCharacterFieldDelimiter",
          "value" : "||"
        }, {
          "name" : "dataFormatConfig.multiCharacterLineDelimiter",
          "value" : "${str:unescapeJava('\\\\n')}"
        }, {
          "name" : "dataFormatConfig.csvCustomEscape",
          "value" : "\\"
        }, {
          "name" : "dataFormatConfig.csvCustomQuote",
          "value" : "\""
        }, {
          "name" : "dataFormatConfig.csvEnableComments",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvCommentMarker",
          "value" : "#"
        }, {
          "name" : "dataFormatConfig.csvIgnoreEmptyLines",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvRecordType",
          "value" : "LIST_MAP"
        }, {
          "name" : "dataFormatConfig.csvSkipStartLines",
          "value" : 0
        }, {
          "name" : "dataFormatConfig.parseNull",
          "value" : false
        }, {
          "name" : "dataFormatConfig.nullConstant",
          "value" : "\\\\N"
        }, {
          "name" : "dataFormatConfig.xmlRecordElement",
          "value" : null
        }, {
          "name" : "dataFormatConfig.preserveRootElement",
          "value" : false
        }, {
          "name" : "dataFormatConfig.includeFieldXpathAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xPathNamespaceContext",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.outputFieldAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xmlMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.logMode",
          "value" : "COMMON_LOG_FORMAT"
        }, {
          "name" : "dataFormatConfig.logMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.retainOriginalLine",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customLogFormat",
          "value" : "%h %l %u %t \"%r\" %>s %b"
        }, {
          "name" : "dataFormatConfig.regex",
          "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
        }, {
          "name" : "dataFormatConfig.fieldPathsToGroupName",
          "value" : [ {
            "fieldPath" : "/",
            "group" : 1
          } ]
        }, {
          "name" : "dataFormatConfig.grokPatternDefinition",
          "value" : null
        }, {
          "name" : "dataFormatConfig.grokPattern",
          "value" : "%{COMMONAPACHELOG}"
        }, {
          "name" : "dataFormatConfig.onParseError",
          "value" : "ERROR"
        }, {
          "name" : "dataFormatConfig.maxStackTraceLines",
          "value" : 50
        }, {
          "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
          "value" : false
        }, {
          "name" : "dataFormatConfig.log4jCustomLogFormat",
          "value" : "%r [%t] %-5p %c %x - %m%n"
        }, {
          "name" : "dataFormatConfig.avroSchemaSource",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSchema",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaRegistryUrls",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.basicAuth",
          "value" : ""
        }, {
          "name" : "dataFormatConfig.schemaLookupMode",
          "value" : "SUBJECT"
        }, {
          "name" : "dataFormatConfig.subject",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaId",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSkipUnionIndex",
          "value" : false
        }, {
          "name" : "dataFormatConfig.protoDescriptorFile",
          "value" : null
        }, {
          "name" : "dataFormatConfig.messageType",
          "value" : null
        }, {
          "name" : "dataFormatConfig.isDelimited",
          "value" : false
        }, {
          "name" : "dataFormatConfig.binaryMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.datagramMode",
          "value" : "SYSLOG"
        }, {
          "name" : "dataFormatConfig.typesDbPath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.convertTime",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excludeInterval",
          "value" : false
        }, {
          "name" : "dataFormatConfig.authFilePath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesMode",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSize",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMs",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.wholeFileMaxObjectLen",
          "value" : 8192
        }, {
          "name" : "dataFormatConfig.rateLimit",
          "value" : "-1"
        }, {
          "name" : "dataFormatConfig.verifyChecksum",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelHeader",
          "value" : null
        }, {
          "name" : "dataFormatConfig.excelSkipCellsWithNoHeader",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelReadAllSheets",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelSheetNames",
          "value" : [ ]
        } ]
      } ]
    },
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1721190956234,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1721190956234,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1721190956234,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1721190956234,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "297ccd3d-1542-4b8a-916a-90d7c063a965",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}
